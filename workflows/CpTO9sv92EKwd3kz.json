{
  "active": false,
  "connections": {
    "normalizacao": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Block Chat Id": {
      "main": [
        [
          {
            "node": "Switch Block",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Responder Evolution API": {
      "main": [
        [
          {
            "node": "Limpa dados no REDIS",
            "type": "main",
            "index": 0
          },
          {
            "node": "Limpa dados no REDIS block",
            "type": "main",
            "index": 0
          },
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get messages buffer": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "push message buffer": {
      "main": [
        [
          {
            "node": "get messages buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "get messages buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete buffer": {
      "main": [
        [
          {
            "node": "Split User messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "chatInput": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split User messages": {
      "main": [
        [
          {
            "node": "Parse message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse message": {
      "main": [
        [
          {
            "node": "Switch Content Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get audio base64 EvolutionAPI": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI Transcribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message audio content": {
      "main": [
        [
          {
            "node": "Merge Append",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "chatInput",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message text content": {
      "main": [
        [
          {
            "node": "Merge Append",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Switch Block": {
      "main": [
        [
          {
            "node": "Switch Commads",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Evolution - envia msg whatsapp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution - envia msg whatsapp": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Commads": {
      "main": [
        [
          {
            "node": "Responder Evolution API",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "push message buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Transcribe": {
      "main": [
        [
          {
            "node": "Message audio content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Append": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Content Type": {
      "main": [
        [
          {
            "node": "Get audio base64 EvolutionAPI",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Message text content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Block AI1",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "delete buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Block AI",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Block Chat Id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "input evolution": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Responder Evolution API",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "memoria": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "1. identificacao": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "openai": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Divisor de textos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Divisor de textos": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2. send_audio_explication": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "3.solicitacao_fotos": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "normalizacao",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "normalizacao",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-19T14:07:11.070Z",
  "id": "CpTO9sv92EKwd3kz",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "TENENTE WHATS 19/05",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f16b1bf-1a3e-4029-8d7a-1bccb919ee43",
              "name": "message.message_id",
              "value": "={{ $('input evolution').item.json.body.data.key.id || '' }}",
              "type": "string"
            },
            {
              "id": "11800d83-ecca-4f9c-a878-a2419db0c8e9",
              "name": "message.chat_id",
              "value": "={{ $('input evolution').item.json.body.data.key.remoteJid || '' }}",
              "type": "string"
            },
            {
              "id": "c33f9527-e661-49e5-8e5e-64f3b430928a",
              "name": "message.content_type",
              "value": "={{ $('input evolution').item.json.body.data.message.extendedTextMessage ? 'text' : '' }}{{ $('input evolution').item.json.body.data.message.conversation ? 'text' : '' }}{{ $('input evolution').item.json.body.data.message.audioMessage ? 'audio' : '' }}{{ $('input evolution').item.json.body.data.message.imageMessage ? 'image' : '' }}",
              "type": "string"
            },
            {
              "id": "06eba1c9-cff0-4f68-b6da-6bb0092466b7",
              "name": "message.content",
              "value": "={{ $('input evolution').item.json.body.data.message.extendedTextMessage?.text || '' }}{{ $('input evolution').item.json.body.data.message.imageMessage?.caption || '' }}{{ $('input evolution').item.json.body.data.message.conversation || '' }}",
              "type": "string"
            },
            {
              "id": "b97f1af3-5361-46fc-9303-d644921231d8",
              "name": "message.timestamp",
              "value": "={{ $('input evolution').item.json.body.data.messageTimestamp.toDateTime('s').toISO() }}",
              "type": "string"
            },
            {
              "id": "dc3dc59c-90a3-4a45-bea2-de092c91083b",
              "name": "message.content_url",
              "value": "={{ $('input evolution').item.json.body.data.message.audioMessage?.url || '' }}{{ $('input evolution').item.json.body.data.message.imageMessage?.url || '' }}",
              "type": "string"
            },
            {
              "id": "8b01a818-a456-476e-bace-adefe2f04eb4",
              "name": "message.event",
              "value": "={{ $('input evolution').item.json.body.data.key.fromMe ? 'outcoming' : 'incoming' }}",
              "type": "string"
            },
            {
              "id": "b2f1f6b5-292f-4695-9e41-be200c6d7053",
              "name": "instance.name",
              "value": "={{ $('input evolution').item.json.body.instance }}",
              "type": "string"
            },
            {
              "id": "572fcce5-8a26-4e8f-a48a-ef0bee569dcd",
              "name": "instance.apikey",
              "value": "={{ $('input evolution').item.json.body.apikey }}",
              "type": "string"
            },
            {
              "id": "e90043db-657b-461c-b040-2d6089abfbdb",
              "name": "instance.server_url",
              "value": "={{ $('input evolution').item.json.body.server_url }}",
              "type": "string"
            },
            {
              "id": "dd1bc352-1a27-4f9a-af3d-61ff6af74d0d",
              "name": "user.telefone",
              "value": "={{ $('input evolution').item.json.body.data.key.remoteJid.replace(/\\D/g, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3dfb2e4c-1e7f-4b13-a1f4-f39b82ca6483",
      "name": "normalizacao",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        860,
        820
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $json.message.chat_id }}_block",
        "value": "true",
        "keyType": "string"
      },
      "id": "bdd9362d-7281-4393-8919-1e6a4c1dc7ab",
      "name": "Block AI",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1360,
        680
      ],
      "credentials": {
        "redis": {
          "id": "CnAYUverQDl88vKP",
          "name": "redis-peak"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "block",
        "key": "={{ $json.message.chat_id }}_block",
        "options": {}
      },
      "id": "667acf80-734e-4e89-b0b9-043390047882",
      "name": "Get Block Chat Id",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1340,
        840
      ],
      "credentials": {
        "redis": {
          "id": "CnAYUverQDl88vKP",
          "name": "redis-peak"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('normalizacao').item.json.instance.server_url }}/message/sendText/{{ $('normalizacao').item.json.instance.name }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('normalizacao').item.json.instance.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('normalizacao').item.json.message.chat_id }}"
            },
            {
              "name": "text",
              "value": "=🔄🗑️ A conversa foi resetada e todas as informações foram excluídas com sucesso\n"
            }
          ]
        },
        "options": {}
      },
      "id": "ed69421a-1ae5-4c95-853f-603597f2269b",
      "name": "Responder Evolution API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1920,
        620
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "messages",
        "key": "={{ $('normalizacao').item.json.message.chat_id }}_buffer",
        "options": {}
      },
      "id": "ec390b6d-5efd-4b6e-9f57-0eff266d2f58",
      "name": "get messages buffer",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2200,
        860
      ],
      "credentials": {
        "redis": {
          "id": "CnAYUverQDl88vKP",
          "name": "redis-peak"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('normalizacao').item.json.message.chat_id }}_buffer",
        "messageData": "={{ JSON.stringify($('normalizacao').item.json.message) }}",
        "tail": true
      },
      "id": "6e35e82a-4740-4588-8751-54b9a63ace4e",
      "name": "push message buffer",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1960,
        860
      ],
      "credentials": {
        "redis": {
          "id": "CnAYUverQDl88vKP",
          "name": "redis-peak"
        }
      }
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "790dcb53-42fe-43ff-9596-1109e2329407",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2600,
        1040
      ],
      "webhookId": "77a589dc-32c7-4f34-84c0-bc7232f2c5ad"
    },
    {
      "parameters": {},
      "id": "e3ee52d6-f5f1-4de2-b445-d14c6f0195c6",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2600,
        700
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('normalizacao').item.json.message.chat_id }}_buffer"
      },
      "id": "5609d254-0629-45b0-b5a7-62f798d072bd",
      "name": "delete buffer",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2600,
        860
      ],
      "credentials": {
        "redis": {
          "id": "CnAYUverQDl88vKP",
          "name": "redis-peak"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "db5cfe0a-7f43-4a61-8b27-bfd3a95deb8d",
              "name": "chatInput",
              "value": "={{ $json.messages.join('\\n') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e8f83864-2709-4012-a090-fe705089af33",
      "name": "chatInput",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4840,
        860
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "messages",
        "options": {}
      },
      "id": "2b8b1c24-ddd2-4cfd-b3ee-6f17e196f8b1",
      "name": "Split User messages",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2800,
        860
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ JSON.parse($json.messages) }}",
        "options": {}
      },
      "id": "6ad0d588-7a0e-4497-a311-91b66ac29479",
      "name": "Parse message",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3020,
        860
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('normalizacao').item.json.instance.server_url }}/chat/getBase64FromMediaMessage/{{ $('normalizacao').item.json.instance.name }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('normalizacao').item.json.instance.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "message.key.id",
              "value": "={{ $json.message_id }}"
            },
            {
              "name": "convertToMp4",
              "value": "={{ Boolean(false) }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3c552d0a-6375-41c5-ad4c-dd1d10b8b92e",
      "name": "Get audio base64 EvolutionAPI",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3480,
        680
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "mimeType": "={{ $json.mimetype }}"
        }
      },
      "id": "0d7f6c43-f5e9-41bd-8148-48d0f305471e",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        3660,
        680
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "82cccc1e-3c1d-43fd-a4e9-7d2794cb23eb",
              "name": "content",
              "value": "=<audio>\n{{ $json.text }}\n</audio>",
              "type": "string"
            },
            {
              "id": "d96cf6b7-02ea-464f-862d-fa0518848297",
              "name": "message_id",
              "value": "={{ $('Parse message').item.json.message_id }}",
              "type": "string"
            },
            {
              "id": "51aee4e3-5e8c-4f0e-8afc-13ba65e2094c",
              "name": "chat_id",
              "value": "={{ $('Parse message').item.json.chat_id }}",
              "type": "string"
            },
            {
              "id": "f854354f-711f-4809-ade2-8d4f5d17921d",
              "name": "content_type",
              "value": "={{ $('Parse message').item.json.content_type }}",
              "type": "string"
            },
            {
              "id": "4dbd77f8-6346-4eb5-ba45-5e0a88266c05",
              "name": "timestamp",
              "value": "={{ $('Parse message').item.json.timestamp }}",
              "type": "string"
            },
            {
              "id": "1d7de295-bd0f-4640-90da-4580e408c40a",
              "name": "content_url",
              "value": "={{ $('Parse message').item.json.content_url }}",
              "type": "string"
            },
            {
              "id": "8b712f9c-bb3f-48b1-b9af-4109ef1c8858",
              "name": "event",
              "value": "={{ $('Parse message').item.json.event }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5b2db3f6-db85-478d-96c2-0820caae18f0",
      "name": "Message audio content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4020,
        680
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "content",
              "renameField": true,
              "outputFieldName": "messages"
            }
          ]
        },
        "options": {}
      },
      "id": "8d753d84-32b6-41a3-9fdc-7fc06c8c0bcb",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        4640,
        860
      ]
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "timestamp"
            }
          ]
        },
        "options": {}
      },
      "id": "6ec4e124-bffb-42b5-adb9-04c308c8238e",
      "name": "Sort",
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        4420,
        860
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c3f5615e-1294-4a6a-81f5-59448b8a0d0c",
              "name": "content",
              "value": "=<text>\n{{ $('Parse message').item.json.content }}\n<text>",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "d149247b-c45f-40f2-8f3e-128c89489461",
      "name": "Message text content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3480,
        860
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "IA PODE RESPONDER"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "3ef0e01c-cc14-4663-bb4d-2905b350c3ab",
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "IA NAO PODE RESPONDER"
            }
          ]
        },
        "options": {}
      },
      "id": "33b93ac7-3bdf-4d5f-92b8-5bc0294850c3",
      "name": "Switch Block",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1520,
        840
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b303552c-db05-4ab4-b1b0-0d08bf1ac5a2",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        5660,
        860
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('normalizacao').item.json.instance.server_url }}/message/sendText/{{ $('normalizacao').item.json.instance.name }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('normalizacao').item.json.instance.apikey }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('normalizacao').item.json.message.chat_id }}"
            },
            {
              "name": "text",
              "value": "={{ $json.part }}"
            },
            {
              "name": "delay",
              "value": "={{ 5000 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "4d0294c7-f0b8-4b15-ab2f-04e0e544180c",
      "name": "Evolution - envia msg whatsapp",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        5940,
        860
      ],
      "retryOnFail": false,
      "waitBetweenTries": 5000,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('normalizacao').first().json.message.chat_id }}"
      },
      "id": "dc83aade-3e85-4aec-88a3-9bfc13d378f6",
      "name": "Limpa dados no REDIS",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2100,
        280
      ],
      "credentials": {
        "redis": {
          "id": "CnAYUverQDl88vKP",
          "name": "redis-peak"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('normalizacao').item.json.message.content }}",
                    "rightValue": "//excluir//",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "restart_command"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "conversation"
        }
      },
      "id": "8209c98a-77f0-4c93-a32d-4ccac019305d",
      "name": "Switch Commads",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1740,
        840
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "5fffb8be-4da8-471f-831a-66cf100b9117",
      "name": "OpenAI Transcribe",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        3840,
        680
      ],
      "credentials": {
        "openAiApi": {
          "id": "OqiZuzKjXxienn7V",
          "name": "peak-key-gorila"
        }
      }
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "id": "7ed7d1b2-7770-4ed4-b79a-5d4d223fd2f1",
      "name": "Merge Append",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4200,
        860
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.content_type }}",
                    "rightValue": "audio",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "a1dfeee8-7927-4419-b091-e5b1930c011e",
                    "leftValue": "={{ $json.content_type }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "7431ffc4-1ee4-4556-8053-d8b2480450b8",
                    "leftValue": "={{ $json.content_type }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "other"
        }
      },
      "id": "5d645d4c-0097-40fb-9ff5-9ed5ca5ce1e2",
      "name": "Switch Content Type",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        3220,
        840
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ JSON.parse($json.messages.first()).message_id }}",
                    "rightValue": "={{ $('normalizacao').item.json.message.message_id }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "nada a fazer"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fdd1e894-df1c-4ebd-8f56-82f66dad03be",
                    "leftValue": "={{ JSON.parse($json.messages.last()).timestamp }}",
                    "rightValue": "={{ $now.minus(40, 'seconds') }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "prosseguir"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "esperar"
        }
      },
      "id": "23941f47-c8b7-4cf8-9703-34e8bb4bec98",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        2380,
        860
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.event }}",
                    "rightValue": "outcoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "outcoming"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "d7b42536-638f-4128-b51b-6aa913e9d9bc",
                    "leftValue": "={{ $json.message.event }}",
                    "rightValue": "incoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "incoming"
            }
          ]
        },
        "options": {}
      },
      "id": "828efa16-6287-45a9-b92b-d7c5a4dd8f9f",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1100,
        820
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "41174176-32fe-498a-8ee3-c54dba65069b1",
        "responseMode": "=onReceived",
        "options": {}
      },
      "id": "cb68b160-0c74-4d38-a12e-20fbff402de3",
      "name": "input evolution",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        260,
        800
      ],
      "webhookId": "41174176-32fe-498a-8ee3-c54dba65069b"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('normalizacao').first().json.message.chat_id }}_block"
      },
      "id": "08b0c860-abdb-43aa-970e-4fe7b0131589",
      "name": "Limpa dados no REDIS block",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2100,
        440
      ],
      "credentials": {
        "redis": {
          "id": "CnAYUverQDl88vKP",
          "name": "redis-peak"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bc837a22-4931-47ca-8738-3aa5bf9e2cf4",
              "leftValue": "={{ $('normalizacao').item.json.message.content }}",
              "rightValue": "//excluir//",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1660,
        620
      ],
      "id": "cf28bb34-df8e-4bcd-b14b-4e5069f29692",
      "name": "If"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "options": {
          "systemMessage": "=<objetivo>\n    Realizar atendimento automatizado em tom motivador e fraterno, guiando novos interessados na consultoria de fisiculturismo do atleta Tenente Breno.\n  </objetivo>\n\n  <persona>\n    <nome>Tenente Breno</nome>\n    <profissao>Fisiculturista profissional (categoria Open)</profissao>\n    <tom>Fraterno, motivador, direto</tom>\n<regras_de_comunicacao>\n    <valores_centrais>\n        Inspirar disciplina, força e pertencimento ao Esquadrão do Tenente.\n    </valores_centrais>\n\n    <identidade>\n        A persona deve sempre se referir a si mesma como \"Tenente Breno\".\n        Utilizar uma linguagem motivacional, firme e direta.\n    </identidade>\n\n    <tratamento_ao_usuario>\n        Após o usuário informar seu nome, determinar automaticamente o gênero com base no nome.\n\n        Se o nome for de gênero masculino:\n            - Trate o usuário como \"meu futuro soldado\".\n            - Exemplo: \"Fala João, aqui é o Tenente. Fico muito feliz em saber que você quer fazer parte do meu Esquadrão.\"\n\n        Se o nome for de gênero feminino:\n            - Trate o usuário como \"atleta\".\n            - Exemplo: \"Fala atleta, aqui é o Tenente. Fico muito feliz em saber que você quer fazer parte do meu Esquadrão.\"\n\n        Se o nome não for claramente identificável (gênero ambíguo ou nome incomum):\n            - Trate o usuário como \"atleta\" de forma unissex.\n            - Exemplo: \"Fala atleta, aqui é o Tenente. Fico muito feliz em saber que você quer fazer parte do meu Esquadrão.\"\n\n        Regras adicionais:\n            - Nunca use o nome e o termo (soldado ou atleta) juntos. Apenas um por vez.\n            - Use o nome somente se o gênero for claramente masculino.\n\n            Regras adicionais: \n            - Sempre inicie com a mensagem de saudação: Seja bem-vindo ao Esquadrão Águia. Pode me informar seu nomee sua idade, por favor?\n\n    </tratamento_ao_usuario>\n    <regra>\n  Sempre que o usuário fornecer um nome composto (ex: \"Pedro Henrique\", \"Ana Clara\", \"João Paulo\"), utilize apenas o primeiro nome para todas as mensagens personalizadas e interações.  \n\n  Exemplo:  \n  Entrada: \"Pedro Henrique\"  \n  Uso: \"Pedro\"\n\n  Essa regra garante uma comunicação mais direta e personalizada.\n</regra>\n</regras_de_comunicacao>\n\n  </persona>\n\n    <etapas>\nvocê está na etapa\n<regra>\n  A seguinte frase nunca deve ser enviada ao usuário em nenhuma etapa ou situação:\n\n  \"Você vai mandar só essas ou tem mais fotos?\"\n</regra>\n      <regra>Seja conciso; envie apenas a mensagem da etapa.</regra>\n      <regra>Avance de fase apenas quando a condição de avanço for atendida.</regra>\n      <regra>Siga as etapas em ordem cronológica.</regra\n<regra> caso o usuario já tenha passado da <etapa2>, nao diga que irá explicar a consultoria para ele, caso ele pergunte sobre preço, solicite as fotos.</regra>\n<regra>\ncaso o usuario esteja na <etapa3>, Jamais ative a tool \"send_audio_explication\"\n</regra>\n<regra>sempre que solicitar as fotos ative a tool \"solicitacao_fotos\"</regra>\n<regra>Sempre inicie com a mensagem de saudação: Seja bem-vindo ao Esquadrão Águia. Pode me informar seu nome e sua idade, por favor?</regra>\n<regra> mande isso \"você ta pronto pra missão, irmão??\" apenas se o usuario estiver na etapa 3, nuca mande isso antes ou apos.</regra>\n    </etapas>\n\n    <interacoes_fotos>\n      <regra>Se for uma mensagem do lead dizendo que vai pegar fotos ou algo do tipo, apenas faça uma conclusão normal, sem cobrança.</regra>\n    </interacoes_fotos>\n\n    <etapa2>\n<regra>\n  Após a ativação da tool {\"tool\":\"send_audio_explication\"}, finalize com a seguinte mensagem personalizada:\n\n  Se o usuário for do sexo masculino:  \n  “[name], você tá pronto pra missão, irmão?”\n\n  Se o usuário for do sexo feminino:  \n  “[name], você tá pronta pra missão, irmã?”\n</regra>      \n\n</etapa2>\n\n    <respostas_valores>\n      <regra>Se estiver na etapa 1 e o usuário perguntar sobre valor, diga: “Pra te passar os valores, preciso te falar como funciona a consultoria. E, como todo bom soldado, a gente realiza uma análise rápida do seu shape, sem compromisso. Posso te explicar como funciona?”</regra>\n      <regra> Se estiver na etapa 2 e o usuário perguntar sobre valor, diga:“Pra te passar os valores, preciso fazer uma avaliação do seu shape. Missão sem diagnóstico é missão falha. Me manda 3 fotos, uma de frente, uma de costas e uma de lado.\n    </respostas_valores>\n\n    <tools>\n      <regra>Caso o usuário peça explicação da consultoria e ainda não esteja na etapa 2, ative imediatamente a tool \"send_audio_explication\".</regra>\n      <regra>Seguindo a regra anterior, apenas envie o áudio, sem avançar de fase.</regra>\n      <regra>Nunca ative a mesma tool mais de uma vez.</regra>\n      <regra>JAMAIS envie essa mensagem para o usuario : &lt;positivo&gt;{\"tool\":\"send_audio_explication\"}&lt;/positivo&gt;; apenas ative a ferramenta de forma direta.</regra>\n    </tools>\n\n    <dados_usuario>\n      <regra>Se na etapa 1 o usuário mandar nome e um número (sem dizer “anos”), considere esse número como idade.</regra>\n    </dados_usuario>\n\n    <pos_etapa2>\n      <regra>Se o usuário já passou da etapa 2, e perguntar sobre preço, apenas solicite as fotos — não diga que irá explicar a consultoria.</regra>\n    </pos_etapa2>\n\n  </regras>\n\n\n  <fluxo_atendimento>\n\n<fase numero=\"1\" nome=\"Saudação e Coleta de Dados\">\n  <mensagem>\n    Seja bem-vindo ao Esquadrão Águia. Pode me informar seu nome e sua idade, por favor?\n  </mensagem>\n  <instrucoes>\n    Após receber o nome, identifique o gênero (masculino, feminino ou indefinido) com base no nome fornecido. Essa informação será usada para personalizar as mensagens nas próximas fases.\n  </instrucoes>\n  <condicao_avanco>Nome e idade fornecidos</condicao_avanco>\n  <acao>{\"tool\":\"identification\"}</acao>\n</fase>\n\n\n<fase numero=\"2\" nome=\"Permissão para Envio de Áudio Explicativo\">\n  <mensagem>\n    <if genero=\"masculino\">\n      Fala (name),aqui é o Tenente! Fico muito feliz em saber que você quer fazer parte do meu Esquadrão. Eu mesmo faço o atendimento, então às vezes posso demorar um pouco. Gosto de explicar tudo logo de início pra você entender e me falar se tem interesse, fechado?\n    </if>\n    <if genero=\"feminino\">\n      Fala atleta, aqui é o Tenente! Fico muito feliz em saber que você quer fazer parte do meu Esquadrão. Eu mesmo faço o atendimento, então às vezes posso demorar um pouco. Gosto de explicar tudo logo de início pra você entender e me falar se tem interesse, fechado?\n    </if>\n    <if genero=\"indefinido\">\n      Fala atleta, aqui é o Tenente! Fico muito feliz em saber que você quer fazer parte do meu Esquadrão. Eu mesmo faço o atendimento, então às vezes posso demorar um pouco. Gosto de explicar tudo logo de início pra você entender e me falar se tem interesse, fechado?\n    </if>\n  </mensagem>\n  <condicao_avanco>Resposta contém aceitação (“sim”, “ok”, “pode”)</condicao_avanco>\n  <acao>Ative a {\"tool\":\"send_audio_explication\"}</acao>\n</fase>\n\n\n    <fase numero=\"3\" nome=\"Explicação e Permissão para Avaliação Física\">\n      <mensagem>\n        Pra gente continuar, soldado, preciso fazer uma avaliação do seu shape. Missão sem diagnóstico é missão falha. Me manda 3 fotos, uma de frente, uma de costas e uma de lado.\n<regra> nessa etapa ative a tool \"solicitacao_fotos\"</regra>\n      </mensagem>\n      <condicao_avanco>Pelo menos 1 foto válida recebida</condicao_avanco>\n      <acao>{\"tool\":\"photo_collection\"}</acao>\n    </fase>\n\n  </fluxo_atendimento>\n\n  <funcoes>\n    <funcao>is_positive(user_message): retorna verdadeiro se a mensagem contiver intenções afirmativas (“sim”, “pode”, “claro” etc.)</funcao>\n    <funcao>missing_fields(form_data): lista os campos da tabela que ainda estão vazios</funcao>\n    <nota>Armazene os dados em memória da conversa: <em>name</em>, <em>age</em>, <em>form_data</em>, <em>photos</em></nota>\n  </funcoes>\n\n</agente>",
          "returnIntermediateSteps": true,
          "passthroughBinaryImages": true
        }
      },
      "id": "ed5d8824-6a5e-4996-9ebe-ad16fac603d5",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        5100,
        860
      ],
      "retryOnFail": false,
      "waitBetweenTries": 100,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('normalizacao').item.json.message.chat_id }}",
        "contextWindowLength": 80
      },
      "id": "441ae6b1-44e6-4362-b49a-e195b23f9544",
      "name": "memoria",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.3,
      "position": [
        4700,
        1100
      ],
      "credentials": {
        "redis": {
          "id": "CnAYUverQDl88vKP",
          "name": "redis-peak"
        }
      }
    },
    {
      "parameters": {
        "name": "identificacao_usuario",
        "description": "Utilize essa tool para registrar nome e idade do usuario, e definir o genero pelo nome.",
        "workflowId": {
          "__rl": true,
          "value": "fAEYZEUUurV1dQgM",
          "mode": "list",
          "cachedResultName": "1. Identificação_tenente"
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n  \"name\": \"Username\",\n  \"age\": 10,\n  \"gender\": \"Feminino\"\n   \n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.3,
      "position": [
        5100,
        1120
      ],
      "id": "bf15c9a9-b679-405e-8845-4033deb17de6",
      "name": "1. identificacao"
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {
          "temperature": 0.3
        }
      },
      "id": "2e99cc80-01fc-4a43-a94c-6d43eaa364d7",
      "name": "openai",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4840,
        1100
      ],
      "credentials": {
        "openAiApi": {
          "id": "OqiZuzKjXxienn7V",
          "name": "peak-key-gorila"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Pega o JSON do primeiro item\nconst data = $input.first().json;\n\n// Usa `output` se existir, senão `chatInput`, senão string vazia\nconst textInputRaw = data.output ?? data.chatInput ?? '';\n\n// Substitui todos os '**' por '*'\nconst formattedText = textInputRaw.replace(/\\*\\*/g, '*');\n\n// Função para verificar se uma string é numérica\nfunction isNumeric(str) {\n  return !isNaN(str) && !isNaN(parseFloat(str));\n}\n\n// Lista de abreviações comuns\nconst abbreviations = [\"dr.\", \"sr.\", \"sra.\", \"ex.\", \"etc.\", \"mr.\", \"mrs.\", \"ms.\", \"prof.\", \"p.e.\", \"i.e.\", \"vs.\"];\n\n// Tenta decodificar o texto, tratando possíveis erros de decodificação\nlet str = '';\ntry {\n  str = decodeURIComponent(formattedText).replace(/\"/g, \"'\");\n} catch (e) {\n  console.error(\"Erro na decodificação do texto:\", e.message);\n  str = formattedText;\n}\n\n// Encontra os índices para divisão do texto com base em pontuações e outras regras\nconst splitIndices = [];\nfor (let i = 0; i < str.length; i++) {\n  if (['.', '!', '?', ';'].includes(str[i])) {\n    // Ignora pontos duplos\n    if (i < str.length - 1 && str[i] === str[i + 1]) continue;\n    // Ignora pontos em números (ex: 3.14)\n    if (i > 0 && i < str.length - 1 && isNumeric(str[i - 1]) && isNumeric(str[i + 1])) continue;\n    // Ignora abreviações\n    const isAbbreviation = abbreviations.some(abbr =>\n      str.slice(i - abbr.length + 1, i + 1).toLowerCase() === abbr\n    );\n    if (isAbbreviation) continue;\n    // Exige espaço ou quebra de linha após a pontuação\n    if (i < str.length - 1 && ![' ', '\\n'].includes(str[i + 1])) continue;\n    splitIndices.push(i);\n  }\n}\n\n// Divide o texto nos índices identificados\nconst strArray = [];\nlet lastIdx = 0;\nsplitIndices.forEach(idx => {\n  const part = str.slice(lastIdx, idx + 1).trim();\n  if (part) strArray.push({ part });\n  lastIdx = idx + 1;\n});\n// Adiciona a última parte\nconst lastPart = str.slice(lastIdx).trim();\nif (lastPart) strArray.push({ part: lastPart });\n\n// Retorna no formato esperado pelo n8n\nreturn strArray.map(item => ({ json: item }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5440,
        860
      ],
      "id": "c93bf1eb-7820-4b6f-b9b0-386a1e4cccc0",
      "name": "Divisor de textos"
    },
    {
      "parameters": {
        "name": "send_audio_explication",
        "description": "Utilize essa tool após a confirmação positiva na etapa 2",
        "workflowId": {
          "__rl": true,
          "value": "qSAadJME5Hbf69qc",
          "mode": "list",
          "cachedResultName": "2.send_audio_explication_tenente"
        },
        "fields": {
          "values": [
            {
              "name": "remojid",
              "stringValue": "={{ $('normalizacao').item.json.message.chat_id }}"
            },
            {
              "name": "api",
              "stringValue": "={{ $('normalizacao').item.json.instance.apikey }}"
            },
            {
              "name": "url",
              "stringValue": "={{ $('normalizacao').item.json.instance.server_url }}"
            },
            {
              "name": "instance",
              "stringValue": "={{ $('normalizacao').item.json.instance.name }}"
            }
          ]
        },
        "jsonSchemaExample": ""
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.3,
      "position": [
        5300,
        1100
      ],
      "id": "0a89519d-96cf-498b-8e77-af899772ff33",
      "name": "2. send_audio_explication"
    },
    {
      "parameters": {
        "name": "solicitacao_fotos",
        "description": "Utilize essa tool dentro da etapa 3, para registarar a etapa do lead ",
        "workflowId": {
          "__rl": true,
          "value": "2TbwjssuTCqq6l09",
          "mode": "list",
          "cachedResultName": "solicitacao_fotos_tenente"
        },
        "fields": {
          "values": [
            {
              "name": "remojid",
              "stringValue": "={{ $('normalizacao').item.json.message.chat_id }}"
            },
            {
              "name": "api",
              "stringValue": "={{ $('normalizacao').item.json.instance.apikey }}"
            },
            {
              "name": "url",
              "stringValue": "={{ $('normalizacao').item.json.instance.server_url }}"
            },
            {
              "name": "instance",
              "stringValue": "={{ $('normalizacao').item.json.instance.name }}"
            }
          ]
        },
        "jsonSchemaExample": ""
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.3,
      "position": [
        5460,
        1120
      ],
      "id": "145c12d8-adea-499c-b7fe-bf8a853bde01",
      "name": "3.solicitacao_fotos"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('normalizacao').first().json.message.chat_id }}_block_audio"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2100,
        620
      ],
      "id": "74d15e72-2a0d-4533-88aa-dc59965e3674",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "CnAYUverQDl88vKP",
          "name": "redis-peak"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $json.chat_id }}_block",
        "value": "true",
        "keyType": "string"
      },
      "id": "beca63f8-d864-465f-8d15-a5007af7acf1",
      "name": "Block AI1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3480,
        1060
      ],
      "credentials": {
        "redis": {
          "id": "CnAYUverQDl88vKP",
          "name": "redis-peak"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "52c7dbf0-a714-41f9-a13d-ee2798411b24",
              "leftValue": "={{ $json.body.data.contextInfo.conversionSource }}",
              "rightValue": "FB_Ads",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -200,
        220
      ],
      "id": "769573c0-ea3d-4234-a5bc-cd83996dbaee",
      "name": "If1"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "anuncio_tenentebreno",
          "mode": "list",
          "cachedResultName": "anuncio_tenentebreno"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "telefone": "={{ $json.telefone }}",
            "id_anuncio": "={{ $json.facebookAdId }}",
            "name": "={{ $json.body.data.pushName }}",
            "plataform": "={{ $json.body.data.contextInfo.entryPointConversionApp }}",
            "dia": "={{ $now.format('yyyy-MM-dd') }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_anuncio",
              "displayName": "id_anuncio",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "telefone",
              "displayName": "telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plataform",
              "displayName": "plataform",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "dia",
              "displayName": "dia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        200,
        0
      ],
      "id": "96c36ee7-fd52-40c5-ade1-7249f010b8e3",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "8ofCwrRA0lvWfODI",
          "name": "Supabase|Peak"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Mapeia todos os items de entrada, extrai o telefone e o Facebook Ad ID,\n// e devolve cada item com campos adicionais `telefone` e `facebookAdId`.\nreturn $input.all().map(item => {\n  // Extrai e limpa o telefone\n  const jid = item.json.body.data.key.remoteJid || '';\n  const telefone = jid.split('@')[0].replace(/\\D+/g, '');\n  \n  // Extrai o ID do anúncio do Facebook\n  const external = item.json.body.data.contextInfo.externalAdReply || {};\n  const facebookAdId = external.sourceId || null;\n  \n  return {\n    json: {\n      ...item.json,\n      telefone,\n      facebookAdId,\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "65f62ac6-3b3e-4835-b49e-9e5a6494c79a",
      "name": "Code"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "52c7dbf0-a714-41f9-a13d-ee2798411b24",
              "leftValue": "={{ $json.body.data.contextInfo.conversionSource }}",
              "rightValue": "FB_Ads",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        580,
        800
      ],
      "id": "96296be6-ba2e-4bea-885a-dc3ebf7a77ec",
      "name": "If2"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "anuncio_tenentebreno",
          "mode": "list",
          "cachedResultName": "anuncio_tenentebreno"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "telefone": "={{ $json.telefone }}",
            "id_anuncio": "={{ $json.facebookAdId }}",
            "name": "={{ $json.body.data.pushName }}",
            "plataform": "={{ $json.body.data.contextInfo.entryPointConversionApp }}",
            "dia": "={{ $now.format('yyyy-MM-dd') }}",
            "expert": "Tenentebreno",
            "valor": 0
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_anuncio",
              "displayName": "id_anuncio",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "telefone",
              "displayName": "telefone",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "plataform",
              "displayName": "plataform",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "dia",
              "displayName": "dia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "expert",
              "displayName": "expert",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "valor",
              "displayName": "valor",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        580,
        480
      ],
      "id": "78988ab4-c95c-4038-969b-f185e011f612",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "8ofCwrRA0lvWfODI",
          "name": "Supabase|Peak"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Mapeia todos os items de entrada, extrai o telefone e o Facebook Ad ID,\n// e devolve cada item com campos adicionais `telefone` e `facebookAdId`.\nreturn $input.all().map(item => {\n  // Extrai e limpa o telefone\n  const jid = item.json.body.data.key.remoteJid || '';\n  const telefone = jid.split('@')[0].replace(/\\D+/g, '');\n  \n  // Extrai o ID do anúncio do Facebook\n  const external = item.json.body.data.contextInfo.externalAdReply || {};\n  const facebookAdId = external.sourceId || null;\n  \n  return {\n    json: {\n      ...item.json,\n      telefone,\n      facebookAdId,\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        640
      ],
      "id": "46bc104a-e00a-48e1-9a9b-5caed937d32d",
      "name": "Code1"
    }
  ],
  "pinData": {
    "input evolution": [
      {
        "json": {
          "headers": {
            "host": "webhook.peak.botfai.com.br",
            "user-agent": "axios/1.7.5",
            "content-length": "5573",
            "accept": "application/json, text/plain, */*",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "5.161.61.123",
            "x-forwarded-host": "webhook.peak.botfai.com.br",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik_traefik.1",
            "x-real-ip": "5.161.61.123"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "Tenente_8971",
            "data": {
              "key": {
                "remoteJid": "5515996144545@s.whatsapp.net",
                "fromMe": false,
                "id": "630644F43A8C387D66C3D8DD39B6B8DE"
              },
              "pushName": "🇯🇵😎🇧🇷",
              "message": {
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "recipientKeyHash": "0CKJyflkqrbB9A==",
                    "recipientTimestamp": "1748025931"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "Wu6NGqU74keW9JwfFwfKmpPHsIw3q1hBPPlgk62xUVg="
                },
                "conversation": "Olá! Tenho interesse e queria mais informações, por favor."
              },
              "contextInfo": {
                "conversionSource": "FB_Ads",
                "conversionData": "QWZkWUpuOWVhdktWWTRhU0o1LTY0ZDFkQ05ZZXhwLUVrSlFxUGwwRHNhVzg4ZkxvTmd2a29MX0ZuVzE2QXh5cTI5Z1VpU19lMF9IS1ZRb3p5Z3pjT0pQb09zX1NPWTRPYWFCb0tTSGNMb2xTVGFjMkQ3ZnpwSDdFUEgzZjBjei05cFlGTXN5ZnVkVml1Snd2QXp2cDJqZDEtZ0hoYTFnTmdpak45VVhRcjZ4ZWp0ZkVwNnR6WnVIbWZhWG5NNm1KVTdxOFduTjR2bjlVNXdCbHU2Q2t0WEFoZGdaX1doWlM0ei10MzFNcEhpMFJ2M3dpY3QwVVFiZHJ5cTJRNFhyWEYwVHBJaWNsZmJUbkFDV3pLeXp5bHl0TnNBOG9oV1NjSFhrcWowY3J1VTZ4d3Q5ZFVaNVU4YXZUVzBLbU82OWdUX1lCMVBobWYzTi02WlEzMmMtU3ZKZHlwQmxZQnJTbTNpaDRKNko3QmlHa09YTjExbWRsTThkbmR3",
                "conversionDelaySeconds": 11,
                "externalAdReply": {
                  "title": "Converse conosco",
                  "body": "Para você que está insatisfeito com seus resultados atuais e busca uma transformação completa: física e mental.\n\nMais que um aluno, você será um soldado em treinamento, comprometido com resultados reais.\n\nClick agora para saber mais",
                  "mediaType": "VIDEO",
                  "thumbnailUrl": "https://scontent.xx.fbcdn.net/v/t15.5256-10/499476414_1447510592911821_2554439861869128119_n.jpg?stp=dst-jpg_p180x540_tt6&_nc_cat=107&ccb=1-7&_nc_sid=40cf1a&_nc_ohc=UVjoGxpvAz0Q7kNvwFHj5-J&_nc_oc=AdnGFNZx63cllOa0wI65YxFaUXZHgB8MeYyNTqdHngpOov0Gf6Xa-5ybdHHPFfsRqfQEgeNCp_ez1y9O7ymFISgK&_nc_ad=z-m&_nc_cid=0&_nc_zt=23&_nc_ht=scontent.xx&_nc_gid=osrToKnnh8K8RYuKF-AFhQ&oh=00_AfLGa1MVk9Utyz7I7m3rRhKsEjhb25BWge3l71mO_xQn4g&oe=68393AFA",
                  "mediaUrl": "https://www.facebook.com/100054085996412/videos/1214082630183888/",
                  "thumbnail": "/9j/4AAQSkZJRgABAQAAAQABAAD/7QCEUGhvdG9zaG9wIDMuMAA4QklNBAQAAAAAAGgcAigAYkZCTUQwYTAwMGE4NTAxMDAwMDBjMDIwMDAwY2UwMjAwMDAxZTAzMDAwMDVkMDMwMDAwMDkwNDAwMDA3YjA1MDAwMDliMDUwMDAwZjkwNTAwMDAyNTA2MDAwMGJhMDcwMDAwAP/bAIQABQYGCwgLCwsLCw0LCwsNDg4NDQ4ODw0ODg4NDxAQEBEREBAQEA8TEhMPEBETFBQTERMWFhYTFhUVFhkWGRYWEgEFBQUKBwoICQkICwgKCAsKCgkJCgoMCQoJCgkMDQsKCwsKCw0MCwsICwsMDAwNDQwMDQoLCg0MDQ0MExQTExOc/8IAEQgAWQAyAwEiAAIRAQMRAf/EAFAAAAEFAQEAAAAAAAAAAAAAAAQAAgMFBgEHEAABAwIDBAgFAwQDAAAAAAABABEhAjEDQVEQYXGBBBITIJGhsfAiMsHR4QVC8RQVM0BScrL/2gAMAwEAAgADAAAAARwL/rexaPP16bb2AO8lirMNdUq5akVZsb6MtCDnnnUcRYFsHWWfeXkvaAUijLpfQWFZozM+nywYc8sSSFZfTedwEw6fDKeHR7TyjUxv3DI5Bi6tuF7OLrbLMX3JafSYJrot5YeW+pcd5YO+CcbiSSdLC9Kb1byb1lL/2gAIAQEAAQUC6QEWWAPhpHw4YXaVuypqLCkLFxqMGjC/VFhplXi4jjo67ArpeGaaqcQmnB+EdoUcepU10oYmGukVUlYD0k4jrrLrIUowqOlHpCwMICpx23ZBHDCJZdPxurhfpZDgBY+J1elGsVI4Ic4hxF0unrIfBV/U1LsaFTXVVUesjUaR0nEFZ29DxOou2WF0kFYmBhYqH6fQsX9OoqX9unD6Ph4SONsqqC6P0xienU0qvH61QxCSQXVXcHfGz//aAAgBAwABPwEEf8m4/h1UH37+50f5VWJLaplh4TjrG3qsCn4Quw63WaGJXZVaLEHVpAXX0+HWTKwamPHZ27wQ6pNBFgqcSmn9vBf1G7u//9oACAECAAE/AZH7XbT8suTbXWIZVNhsNcsFimSu16vVfMLtBqsOSSuq95WLS44bOxaxZEVaqqiqr9y7Df3f/9oACAEBAAY/AsP/AK/XZVx+myE2Z1Cy8EykOrflNVR1Rqou8IP8zIxmVdX8lQ/xM8IPhuDBF1wTufFfMUetd96+b/0gRU55omPqvnbwX+QeS+ceW2oWpGw4Tbx4OyMWVkFVv+HxVYOYHlscZVU/lMdlNQGSAOJSFFdjBX+WgXltE/bDrO7osXEemyyf23eut+4r5j5KB1d4t4JjiBRJ1Pc+J1rzddbNXP8Aof/aAAgBAQABPyELWcu8s4NyTxCMuiBbAtoE6Axy5aJumOFMH7DxREQQRG4mCBDZh1LZcjIwBIgFyWQCGWPszdn1geSEltRDV4THJjPsdkP5Y3ozCdtAhxvoRxAA6wZxkpQScg4hjdA2A4cWuGDxvsi4JAsXR4ognU1H2Q5cuXFrBrQtGHMFBcQQ5Fjx3oGGL3IJ+r6BAIkXbPkzlF7iBTIoRicgmCSSwEnkoeDBhcy9ynURIQKwOXIWz/gLQXIAwLl/snRjfQJtqYKHGWh6vJ1qqA5i/qnotZBHlQ+AHqQhtwnq9zn+EOYAQHLVORaDY74eHQyDBifXgrU5nOuHMIdnNxCMhH1CYe13dMBTAQbuBUhhOkEQBxV1Hdhpyav3C3524ouOfgUKDpNW1MeUoshr8gu+icw7aPvHoyDGJwEng5Ql3c45aILm90CgiGBDaFinIEw2JMg8ZQt3dxFyy8k6NIyF5AQp6ifL3Owp7p9h7z//2gAMAwEAAgADAAAAECDygcM1QpPZCMEYye3MyPsgov/aAAgBAwABPxAjI5rDBHAjyDbIOxL72KzLvnbXLlsZBkOr7kCc4c0NsOhGBy2bPQIDnH1TDfdCybJb+pYyAbVRYDZZI1kweDKM9jsgZqURPd7hPDOku3ZXzT/5d3//2gAIAQIAAT8Q37eAgFxvLG/kntscs4i8DZEvHyTAlyQ2a3O4EJHSFN3fQf/aAAgBAQABPxB9wcQjlIkHRl+UUJb8Zk9h7yTYyWBIFaEBEGGuMn1kKmCBNwhWS4AAbOBR1xNAG4ME+tlCCZG66eosBbyCJi4l7PQsWYoB/aZ0Ew1tbmzzUIts/JM95cwhZtXzfkpwjJ3ZuWeUqewgdEgT5EAdyM0HuwG+aCjkJi8VQaP6pBpIL3FzTE5P4lUepFbxHDnf+BB8yCfosPKuQgphqen3plgh9gIC3CMmQOfJb2bYrmE30ATMJI4k+idlZ5hknHFC6DYRLwQb7JIhIdygwVog/YtKR2JAtfsBEaTmVjtIYYAWvDMHIhRWEHOjHDjmu9eC1N9viVg9VzfUOX3E46yZBEF7w4jRwjUlun981DRYEdMc0HGChECDkCxvFGDb4tFzIdOnV1wY9nBDIWmT7mQ0BAF/sjFxJIU95M8kS2LGX8TcycTEDqfEyfeh/wBNzh3AWzhb3U/iORcfXqrCzXRdOLJ9NfVhugp3oUd8k9TB7Oi3yeADeCzUyIO+h/VmqBThIoBBGiWy88e5civ/2Q==",
                  "sourceType": "ad",
                  "sourceId": "120225776674820556",
                  "sourceUrl": "https://www.instagram.com/p/DJ-cJ8JMT10/",
                  "containsAutoReply": false,
                  "renderLargerThumbnail": true,
                  "showAdAttribution": true,
                  "ctwaClid": "AfcQzWQZgZVtb3z9Y9arwzuRvJkIZwJpLMBvimoVXOCqwO5vqttB_VuPrfR46R860Q0G_Nsyi7h3R55zSWLESOFq0B7GLbIdflc72FzsIK-MsFkn-4jcIYzQTltFYFVNaaneU-Y52g"
                },
                "entryPointConversionSource": "ctwa_ad",
                "entryPointConversionApp": "instagram",
                "entryPointConversionDelaySeconds": 8,
                "trustBannerAction": 4294967295
              },
              "messageType": "extendedTextMessage",
              "messageTimestamp": 1748195759,
              "instanceId": "17296f2a-0eb5-4738-a4ea-417bcfb2bf28",
              "source": "android",
              "chatwootMessageId": 4809496,
              "chatwootInboxId": 105,
              "chatwootConversationId": 39834
            },
            "destination": "https://webhook.peak.botfai.com.br/webhook/41174176-32fe-498a-8ee3-c54dba65069b1",
            "date_time": "2025-05-25T14:56:04.349Z",
            "sender": "5511933778971@s.whatsapp.net",
            "server_url": "https://wsapi.peak.botfai.com.br",
            "apikey": "01C1F0B0CE6B-4540-8574-94C9BA963DF2"
          },
          "webhookUrl": "https://webhook.peak.botfai.com.br/webhook/41174176-32fe-498a-8ee3-c54dba65069b1",
          "executionMode": "production"
        }
      }
    ],
    "normalizacao": [
      {
        "json": {
          "message": {
            "message_id": "630644F43A8C387D66C3D8DD39B6B8DE",
            "chat_id": "5511981437946@s.whatsapp.net",
            "content_type": "text",
            "content": "Olá! Tenho interesse e queria mais informações, por favor.",
            "timestamp": "2025-05-25T14:55:59.000-03:00",
            "content_url": "",
            "event": "incoming"
          },
          "instance": {
            "name": "Tenente_8971",
            "apikey": "01C1F0B0CE6B-4540-8574-94C9BA963DF2",
            "server_url": "https://wsapi.peak.botfai.com.br"
          },
          "user": {
            "telefone": "5515996144545"
          }
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataSuccessExecution": "all",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-06-15T20:06:17.035Z",
  "versionId": "20dff81d-13f5-40b9-ae8a-a36b88e4ae55"
}