{
  "active": false,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Mandar mensagem1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "normaliza dados recebidos": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mandar mensagem": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar supabase": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Envia Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mandar mensagem1": {
      "main": [
        [
          {
            "node": "Buscar supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Envia document": {
      "main": [
        [
          {
            "node": "Envia document1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Envia Audio": {
      "main": [
        [
          {
            "node": "Envia Audio1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "normaliza dados recebidos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Envia document1": {
      "main": [
        [
          {
            "node": "Mandar mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Envia Audio1": {
      "main": [
        [
          {
            "node": "Envia document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-19T17:27:57.993Z",
  "id": "aplZuh1je4wWJDFF",
  "meta": null,
  "name": "Remarketing bruno santos",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 8
            }
          ]
        }
      },
      "id": "d1a359b1-04cf-4501-aeb7-a87b33225019",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -4420,
        360
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "834b1da9-de9e-42fc-8679-e94756850b5f",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -2980,
        360
      ]
    },
    {
      "parameters": {},
      "id": "9915541a-61fa-403d-8314-03c0ad12bb46",
      "name": "Replace Me",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        620,
        700
      ]
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -180,
        620
      ],
      "id": "bbbf751b-d7f0-40ef-93c8-035b904f8ad6",
      "name": "Wait",
      "webhookId": "5d8cfa5a-ce92-4c3f-ad91-c4f9f0b67138"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dcc9fcde-c25b-4324-ba4c-bdbb444d7d7d",
              "name": "numero.usuario",
              "value": "={{ $json.numero }}",
              "type": "string"
            },
            {
              "id": "5f1b9ae5-ab23-4018-adc7-d45eccb3fa7f",
              "name": "url-evolution",
              "value": "https://wsapi.peak.botfai.com.br",
              "type": "string"
            },
            {
              "id": "8d487b1d-c84b-4782-a84d-09071941d6e7",
              "name": "apikey-evolution",
              "value": "l6v7CBnNIRo041fLlwlvmAXCcPlc",
              "type": "string"
            },
            {
              "id": "4701b992-2bca-4b4c-834e-9b445e0e5f3b",
              "name": "instancia",
              "value": "brunosantos_2634",
              "type": "string"
            },
            {
              "id": "8d2097e3-b88b-4164-9cfa-c885ee44e177",
              "name": "recebeu_rmkt",
              "value": "={{ $json.recebeu_rmkt }}",
              "type": "string"
            },
            {
              "id": "b4f9695a-2da4-49a7-a09f-6757563f93f4",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3280,
        360
      ],
      "id": "68a690ab-460c-402c-b7c4-57ba05cb5fde",
      "name": "normaliza dados recebidos"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => ({\n  json: {\n    // mantém todo o JSON original\n    ...item.json,\n    // adiciona o número aleatório como number\n    randomNumber: Math.floor(Math.random() * 5) + 1,\n  }\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1100,
        140
      ],
      "id": "4dafa891-8cd5-4a28-a895-ca3954133a13",
      "name": "Code1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.randomNumber.toString() }}",
                    "rightValue": "=1",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "42c442e1-fdce-4f50-95a6-04143d06d13a"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fb37a57e-98c7-4889-999d-a64a909d45df",
                    "leftValue": "={{ $json.randomNumber.toString() }}",
                    "rightValue": "2",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cf5bba66-631a-4ce7-ad69-5521df2df134",
                    "leftValue": "={{ $json.randomNumber.toString() }}",
                    "rightValue": "3",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "3"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "16810f0c-f27a-48b0-bbe8-0453c7e587cb",
                    "leftValue": "={{ $json.randomNumber.toString() }}",
                    "rightValue": "4",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "4"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6f1240e1-a8aa-458c-a7fc-12573d365dda",
                    "leftValue": "={{ $json.randomNumber.toString() }}",
                    "rightValue": "5",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "5"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -880,
        20
      ],
      "id": "00064651-7324-4bfc-97fc-635160bb7508",
      "name": "Switch"
    },
    {
      "parameters": {
        "amount": 3,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        40,
        0
      ],
      "id": "6dc57f6e-a790-405f-8760-73d3b52cd10a",
      "name": "Wait1",
      "webhookId": "cb5fe55b-1cbe-4456-8c7e-faa6a54cd4f5"
    },
    {
      "parameters": {
        "amount": 7
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -180,
        160
      ],
      "id": "ad130ab6-ce46-4d6d-801c-362b48c8f458",
      "name": "Wait2",
      "webhookId": "16bd17cc-dd48-4da4-b75f-690323d34ed5"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -180,
        320
      ],
      "id": "48b6f32d-8bbf-4669-9057-a11826df899e",
      "name": "Wait3",
      "webhookId": "202588b0-72f2-4b26-bf71-bc1ea9afe42c"
    },
    {
      "parameters": {
        "amount": 9
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -180,
        460
      ],
      "id": "d30e06c3-4561-45bd-817a-2f15378ed39d",
      "name": "Wait4",
      "webhookId": "5ce6cf5a-d502-4016-bf12-96bfb503f673"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('normaliza dados recebidos').item.json['url-evolution'] }}/message/sendText/{{ $('normaliza dados recebidos').item.json.instancia }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('normaliza dados recebidos').item.json['apikey-evolution'] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "=55{{ $('Loop Over Items').first().json.numero.usuario }}"
            },
            {
              "name": "mediatype",
              "value": "image"
            },
            {
              "name": "text",
              "value": "=#Desafiodobrunão\n\nMarca o @bsproteam"
            }
          ]
        },
        "options": {}
      },
      "id": "d71c0176-fb6e-44ad-966c-a8689b59f064",
      "name": "Mandar mensagem",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1000,
        380
      ],
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  numero,\n  recebeu_rmkt,\n  id,\n  midia\nFROM\n  \"rmkt_brunosantos\";\n",
        "options": {}
      },
      "id": "1baf7d8c-4258-4f68-a4f0-5fffa3f55deb",
      "name": "Buscar supabase",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3800,
        360
      ],
      "credentials": {
        "postgres": {
          "id": "lAXuYazfiYgbUaPB",
          "name": "Supabase I Remarketing"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=você tem essa mensagem: Boa tarde, irmão, tudo bem? Se liga só, liberei 3 vagas com condição especial para você entrar no time hoje e tirar esse bucho de uma vez por todas! Agora que seu cartão virou, você não tem mais desculpa em nego kkkkkkkkkkk. E aí, vai aproveitar ou vai empurrar com o bucho de novo?\n\n\nreescreva ela, sem mudar o sentido, sem alterar muito os jargoes, apenas mudando uma palavra ou outra e me retorne somente a mensagem alterada\n\n\n",
        "hasOutputParser": true
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        -2160,
        380
      ],
      "id": "bdbd0f24-4397-4fe5-9502-3fc5c6290db1",
      "name": "Basic LLM Chain",
      "disabled": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -2180,
        520
      ],
      "id": "67fd9373-db5b-4cc8-8a25-d73367c77b99",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "OqiZuzKjXxienn7V",
          "name": "key for ia"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "rmkt_brunosantos",
          "mode": "list",
          "cachedResultName": "rmkt_brunosantos"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "numero": "={{ $('Loop Over Items').item.json.numero.usuario }}",
            "id": "={{ $('normaliza dados recebidos').item.json.id }}",
            "recebeu_rmkt": "Sim"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "numero",
              "displayName": "numero",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "recebeu_rmkt",
              "displayName": "recebeu_rmkt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "midia",
              "displayName": "midia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -840,
        380
      ],
      "id": "3a63819b-10b2-4531-88a8-6eef467fe46c",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "lAXuYazfiYgbUaPB",
          "name": "Supabase I Remarketing"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c51723db-0b29-4ff8-a816-ad0a1224ea89",
              "leftValue": "={{ $('Loop Over Items').item.json.recebeu_rmkt }}",
              "rightValue": "Sim",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2480,
        360
      ],
      "id": "294c3818-1eb9-4d81-8fe5-98923de0fb68",
      "name": "If1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.sv-02.botfai.com.br/message/sendText/numero2testes",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "=566aea34-4c49-47f9-ba60-b24da9c6dd84"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "=5517992749450"
            },
            {
              "name": "mediatype",
              "value": "image"
            },
            {
              "name": "text",
              "value": "=Remarketing Bruno santos"
            }
          ]
        },
        "options": {}
      },
      "id": "a7115f73-5329-4c64-bf25-4b38541df656",
      "name": "Mandar mensagem1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4120,
        360
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d24edd07-16a0-47d3-b33d-51bba082632c",
              "leftValue": "={{ $now.setZone('America/Sao_Paulo').hour < 20 }}",
              "rightValue": "=2025-05-29T20:00:00",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2720,
        360
      ],
      "id": "7e179229-0ad1-4a30-9ec4-8813900cb519",
      "name": "If2"
    },
    {
      "parameters": {
        "errorMessage": "fora de horario"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -2580,
        160
      ],
      "id": "95ccfaa3-36f1-4c42-a998-a1e65df7b5ae",
      "name": "Stop and Error"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('normaliza dados recebidos').item.json['url-evolution'] }}/message/sendMedia/{{ $('normaliza dados recebidos').item.json.instancia }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('normaliza dados recebidos').item.json['apikey-evolution'] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "=55{{ $('Loop Over Items').item.json.numero.usuario }}"
            },
            {
              "name": "mediatype",
              "value": "document"
            },
            {
              "name": "media",
              "value": "https://f005.backblazeb2.com/file/peak-disparo/Ebook-Gratuito-Bruno-Santos-Jejum-Intermitente.pdf"
            }
          ]
        },
        "options": {}
      },
      "id": "bf6edca8-5317-4d36-8184-f5c83a3162b5",
      "name": "Envia document",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1380,
        380
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://wsapi.peak.botfai.com.br/message/sendWhatsAppAudio/brunosantos_2634",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "=l6v7CBnNIRo041fLlwlvmAXCcPlc"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "=55{{ $('Loop Over Items').item.json.numero.usuario }}"
            },
            {
              "name": "audio",
              "value": "https://f005.backblazeb2.com/file/peak-disparo/WhatsApp+Audio+2025-07-10+at+12.17.12.ogg"
            }
          ]
        },
        "options": {}
      },
      "id": "9174ddf0-3063-4820-8ecf-99dad6d5e21b",
      "name": "Envia Audio",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1780,
        380
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "58c76318-6304-45bb-9a83-ff2c2e3023ec",
              "leftValue": "={{ $json.midia }}",
              "rightValue": "Não",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3580,
        360
      ],
      "id": "0f365869-2377-47bc-8edc-eb1737528ddd",
      "name": "If"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('normaliza dados recebidos').item.json['url-evolution'] }}/message/sendMedia/{{ $('normaliza dados recebidos').item.json.instancia }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('normaliza dados recebidos').item.json['apikey-evolution'] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "=55{{ $('Loop Over Items').item.json.numero.usuario }}"
            },
            {
              "name": "mediatype",
              "value": "document"
            },
            {
              "name": "media",
              "value": "https://f005.backblazeb2.com/file/peak-disparo/Ebook-Gratuito-Bruno-Santos-Agua.pdf"
            }
          ]
        },
        "options": {}
      },
      "id": "cb2e3a0a-032f-401f-a76d-59af3685ff9a",
      "name": "Envia document1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1220,
        380
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://wsapi.peak.botfai.com.br/message/sendWhatsAppAudio/brunosantos_2634",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('normaliza dados recebidos').item.json['apikey-evolution'] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "=55{{ $('Loop Over Items').item.json.numero.usuario }}"
            },
            {
              "name": "audio",
              "value": "https://f005.backblazeb2.com/file/peak-disparo/brunosantos2.ogg"
            }
          ]
        },
        "options": {}
      },
      "id": "c59b6f43-7efd-44dd-bcc0-65d8af9ebdbd",
      "name": "Envia Audio1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1580,
        380
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-07-10T16:00:05.454Z",
  "versionId": "620bd4b4-17c6-43a1-b6d0-95ffb3102d05"
}