{
  "active": false,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Mandar mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mandar mensagem1": {
      "main": [
        [
          {
            "node": "Envia imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Mandar mensagem1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Mandar mensagem": {
      "main": [
        [
          {
            "node": "Buscar supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "normaliza dados recebidos": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Envia imagem": {
      "main": [
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar supabase2": {
      "main": [
        [
          {
            "node": "normaliza dados recebidos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-03T11:54:55.318Z",
  "id": "ROGk2TEowc9c15s3",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Disparador tenente breno",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 16,
              "triggerAtMinute": 30
            }
          ]
        }
      },
      "id": "ae67fd96-95f0-43f5-9f79-671359ba4a67",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1380,
        820
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "be6a78c1-34fd-4b2d-9c62-fee5b5461222",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -520,
        820
      ]
    },
    {
      "parameters": {},
      "id": "394c0dc1-6921-49ca-a4b7-5167fd7026c8",
      "name": "Replace Me",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2020,
        1120
      ]
    },
    {
      "parameters": {
        "amount": 8
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1620,
        1220
      ],
      "id": "1cabcad3-34a1-44b8-b3a1-07ea33983f2f",
      "name": "Wait",
      "webhookId": "4a567db2-6019-4917-bcf0-b494bdbc88be"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('normaliza dados recebidos').item.json['url-evolution'] }}/message/sendMedia/{{ $('normaliza dados recebidos').item.json.instancia }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('normaliza dados recebidos').item.json['apikey-evolution'] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Postgres').item.json.telefone }}"
            },
            {
              "name": "mediatype",
              "value": "image"
            },
            {
              "name": "media",
              "value": "https://meu-balde-voise.s3.us-east-005.backblazeb2.com/GORILA+-+FISICOS/MASCULINO/TREINADO+QUER+GANHAR+MASSA+MUSCULAR.png"
            }
          ]
        },
        "options": {}
      },
      "id": "243b9e69-197f-42ac-8a1e-c4f9c7316ded",
      "name": "Envia Imagem1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        0
      ],
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => ({\n  json: {\n    // mantém todo o JSON original\n    ...item.json,\n    // adiciona o número aleatório como number\n    randomNumber: Math.floor(Math.random() * 5) + 1,\n  }\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1100,
        800
      ],
      "id": "a25fe2e5-c9d8-403e-b4ca-ce17263812e4",
      "name": "Code1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.randomNumber.toString() }}",
                    "rightValue": "=1",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "42c442e1-fdce-4f50-95a6-04143d06d13a"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fb37a57e-98c7-4889-999d-a64a909d45df",
                    "leftValue": "={{ $json.randomNumber.toString() }}",
                    "rightValue": "2",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cf5bba66-631a-4ce7-ad69-5521df2df134",
                    "leftValue": "={{ $json.randomNumber.toString() }}",
                    "rightValue": "3",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "3"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "16810f0c-f27a-48b0-bbe8-0453c7e587cb",
                    "leftValue": "={{ $json.randomNumber.toString() }}",
                    "rightValue": "4",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "4"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6f1240e1-a8aa-458c-a7fc-12573d365dda",
                    "leftValue": "={{ $json.randomNumber.toString() }}",
                    "rightValue": "5",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "5"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1320,
        800
      ],
      "id": "69d009bf-fd93-4ccf-95c6-0d5e8aa21d6a",
      "name": "Switch"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1580,
        540
      ],
      "id": "60e9a4f7-2afa-4c81-b906-eb559d86ee62",
      "name": "Wait1",
      "webhookId": "4a567db2-6019-4917-bcf0-b494bdbc88be"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1580,
        700
      ],
      "id": "3dd34ecc-ce3f-489d-99fe-be3e7114a848",
      "name": "Wait2",
      "webhookId": "4a567db2-6019-4917-bcf0-b494bdbc88be"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1600,
        880
      ],
      "id": "62a315c9-9245-4eff-a1a2-f6a633856fb5",
      "name": "Wait3",
      "webhookId": "4a567db2-6019-4917-bcf0-b494bdbc88be"
    },
    {
      "parameters": {
        "amount": 12
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1620,
        1040
      ],
      "id": "ce47704d-9e83-491a-8522-adfa012a5ec1",
      "name": "Wait4",
      "webhookId": "4a567db2-6019-4917-bcf0-b494bdbc88be"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  numero,\n  recebeu_rmkt,\n  id\nFROM\n  \"rmkt-johann\"\nWHERE\n  recebeu_rmkt IS NULL",
        "options": {}
      },
      "id": "44c3e15f-d532-4f55-a484-79a69ff272c6",
      "name": "Buscar supabase",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -1920,
        1340
      ],
      "credentials": {
        "postgres": {
          "id": "lAXuYazfiYgbUaPB",
          "name": "Supabase I Remarketing"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "você tem essa mensagem: E aí, tudo bem?\n\n\nreescreva ela, sem mudar o sentido, sem alterar muito os jargoes, apenas mudando uma palavra ou outra e me retorne somente a mensagem alterada",
        "hasOutputParser": true
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        -2080,
        1180
      ],
      "id": "8292e62d-0a42-4109-a738-1e65edd67dd2",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1620,
        1420
      ],
      "id": "c85077ee-b785-4222-bc00-c92bfee6e43c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "OqiZuzKjXxienn7V",
          "name": "peak-key-gorila"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "rmkt-johann",
          "mode": "list",
          "cachedResultName": "rmkt-johann"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "numero": "={{ $('Loop Over Items').item.json.numero.usuario }}",
            "recebeu_rmkt": "Sim",
            "id": "={{ $('normaliza dados recebidos').item.json.id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "numero",
              "displayName": "numero",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "recebeu_rmkt",
              "displayName": "recebeu_rmkt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1820,
        1420
      ],
      "id": "78b8b8f7-5ed3-4f45-b90f-b18cab3f1883",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "lAXuYazfiYgbUaPB",
          "name": "Supabase I Remarketing"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d24edd07-16a0-47d3-b33d-51bba082632c",
              "leftValue": "={{ $now.setZone('America/Sao_Paulo').hour < 20 }}",
              "rightValue": "=2025-05-29T20:00:00",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -360,
        840
      ],
      "id": "34101f26-1db7-41b7-a2b8-2099cd889f24",
      "name": "If2"
    },
    {
      "parameters": {
        "errorMessage": "fora de horario"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -140,
        600
      ],
      "id": "90b60be8-0ab5-46a6-ab4d-67a3336f6add",
      "name": "Stop and Error"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('normaliza dados recebidos').item.json['url-evolution'] }}/message/sendText/{{ $('normaliza dados recebidos').item.json.instancia }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('normaliza dados recebidos').item.json['apikey-evolution'] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Loop Over Items').first().json.numero.usuario }}"
            },
            {
              "name": "text",
              "value": "={{ $json.text }}"
            },
            {
              "name": "delay",
              "value": "={{ 3000 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a66eadae-1cd0-43d9-97f1-2fef37156a15",
      "name": "Mandar mensagem1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        420,
        840
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -2040,
        860
      ],
      "id": "89fcf1b2-ef5a-42e8-96bf-a2c0c83e311f",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=você tem essa mensagem:E aí, tudo certo? Mais um final de semana dizendo que começava hoje?\n\nA real é que o ano tá voando, a gente já chegou no meio do dele e a meta de colocar o shape ainda não saiu do papel, né? Mas calma que ainda dá tempo e eu vou te ajudar.\n\nVai mesmo passar mais um ano inteiro dizendo:\"Segunda-feira eu começo.\"? O momento de mudar é agora. Me chama aqui e bora meter esse shape pra valer!\n\nreescreva ela, sem mudar o sentido, sem alterar muito os jargoes, apenas mudando uma palavra ou outra e me retorne somente a mensagem alterada\n",
        "hasOutputParser": true
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        80,
        840
      ],
      "id": "bdb3920e-e341-4bdf-80df-2adefc404cfa",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        120,
        980
      ],
      "id": "dabc2a06-a289-40e4-8ccc-0722b5a6f8a1",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "OqiZuzKjXxienn7V",
          "name": "peak-key-gorila"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://evolution.sv-02.botfai.com.br/message/sendText/numero2testes",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "=566aea34-4c49-47f9-ba60-b24da9c6dd84"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "=5517992749450"
            },
            {
              "name": "mediatype",
              "value": "image"
            },
            {
              "name": "text",
              "value": "=Remarketing Basa"
            }
          ]
        },
        "options": {}
      },
      "id": "f2733d13-f25a-4ffc-b45b-b92547512441",
      "name": "Mandar mensagem",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1180,
        820
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dcc9fcde-c25b-4324-ba4c-bdbb444d7d7d",
              "name": "numero.usuario",
              "value": "={{ $json.numero }}",
              "type": "string"
            },
            {
              "id": "5f1b9ae5-ab23-4018-adc7-d45eccb3fa7f",
              "name": "url-evolution",
              "value": "https://wsapi.peak.botfai.com.br",
              "type": "string"
            },
            {
              "id": "8d487b1d-c84b-4782-a84d-09071941d6e7",
              "name": "apikey-evolution",
              "value": "l6v7CBnNIRo041fLlwlvmAXCcPlc",
              "type": "string"
            },
            {
              "id": "4701b992-2bca-4b4c-834e-9b445e0e5f3b",
              "name": "instancia",
              "value": "Tenente_8971",
              "type": "string"
            },
            {
              "id": "8d2097e3-b88b-4164-9cfa-c885ee44e177",
              "name": "recebeu_rmkt",
              "value": "={{ $json.recebeu_rmkt }}",
              "type": "string"
            },
            {
              "id": "b4f9695a-2da4-49a7-a09f-6757563f93f4",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -720,
        820
      ],
      "id": "b2aaa7d8-6fd7-4949-9dd2-e6a7e83e8294",
      "name": "normaliza dados recebidos"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('normaliza dados recebidos').item.json['url-evolution'] }}/message/sendMedia/{{ $('normaliza dados recebidos').item.json.instancia }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('normaliza dados recebidos').item.json['apikey-evolution'] }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('Loop Over Items').first().json.numero.usuario }}"
            },
            {
              "name": "mediatype",
              "value": "image"
            },
            {
              "name": "media",
              "value": "https://f005.backblazeb2.com/file/peak-experts/imagem+tenente+breno.jpg"
            },
            {
              "name": "caption",
              "value": "={{ $json.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e96675ee-06e4-4dc3-bb91-159129952c93",
      "name": "Envia imagem",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        600,
        840
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "rmkt_tenentebreno",
          "mode": "list",
          "cachedResultName": "rmkt_tenentebreno"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "numero": "={{ $('Loop Over Items').item.json.numero.usuario }}",
            "id": "={{ $('normaliza dados recebidos').item.json.id }}",
            "recebeu_rmkt": "Sim"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "numero",
              "displayName": "numero",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            },
            {
              "id": "recebeu_rmkt",
              "displayName": "recebeu_rmkt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        840,
        820
      ],
      "id": "3895e0e9-7e63-46fe-be10-ae2f073877f8",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "lAXuYazfiYgbUaPB",
          "name": "Supabase I Remarketing"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  numero,\n  recebeu_rmkt,\n  id\nFROM\n  \"rmkt_tenentebreno\";\n",
        "options": {}
      },
      "id": "0dc674ab-bb5d-44a4-b2d8-46234d18538e",
      "name": "Buscar supabase2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -960,
        820
      ],
      "credentials": {
        "postgres": {
          "id": "lAXuYazfiYgbUaPB",
          "name": "Supabase I Remarketing"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c51723db-0b29-4ff8-a816-ad0a1224ea89",
              "leftValue": "={{ $json.recebeu_rmkt }}",
              "rightValue": "Sim",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -120,
        820
      ],
      "id": "bf953632-27a6-4908-ad10-f7ca0696249c",
      "name": "If1"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-06-11T21:46:21.246Z",
  "versionId": "3e5e38cd-8221-417f-9a20-307da822dae8"
}